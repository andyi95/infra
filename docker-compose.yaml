version: "3.4"

services:
    whoami:
        image: emilevauge/whoami
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.whoami.rule=Host(`whoami.dev.andyi95.com`)"
            - "traefik.http.routers.whoami.entrypoints=web"

    traefik:
        build:
            context: traefik
        restart: unless-stopped
        network_mode: host
        labels:
            - "traefik.enable=true"
            - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
            - "traefik.http.middlewares.internal.ipwhitelist.sourcerange=${IP_WHITELIST}"
            - "traefik.http.middlewares.https.redirectscheme.scheme=https"
            - "traefik.http.middlewares.https.redirectscheme.permanent=true"
            - "traefik.http.routers.traefik_api.rule=Host(`${TRAEFIK_API_HOST}`)"
            - "traefik.http.routers.traefik_api.middlewares=internal"
            - "traefik.http.services.traefik_api.loadbalancer.server.port=8080"
        volumes:
            -  /var/run/docker.sock:/var/run/docker.sock:ro
            - ./traefik/traefik.yaml:/traefik.yaml
            - ./traefik/data:/data

    dns:
        build: ./dnsmasq
        restart: unless-stopped
        network_mode: host
        cap_add:
            - NET_ADMIN

    adminer:
        image: adminer
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
            - "traefik.http.routers.adminer.middlewares=auth"
            - "traefik.http.middlewares.internal.ipwhitelist.sourcerange=${IP_WHITELIST}"


volumes:
    portainer-data:
