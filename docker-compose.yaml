version: "3.4"

services:
    traefik:
        image: traefik:v2.4
        restart: unless-stopped
        network_mode: host
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./traefik/traefik.yaml:/traefik.yaml
            - ./traefik/data:/data
        labels:
            - "traefik.enable=true"
            - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_BASIC_AUTH}"
            - "traefik.http.middlewares.internal.ipwhitelist.sourcerange=${IP_WHITELIST}"
            - "traefik.http.middlewares.https.redirectscheme.scheme=https"
            - "traefik.http.middlewares.https.redirectscheme.permanent=true"
            - "traefik.http.routers.traefik_api.service=api@internal"
            - "traefik.http.routers.traefik_api.rule=Host(`traefik.${TRAEFIK_BASE_HOST}`)"
            - "traefik.http.routers.traefik_api.middlewares=internal"
            - "traefik.http.routers.traefik_api.tls.certresolver=default"
            - "traefik.http.services.traefik_api.loadbalancer.server.port=8080"
        env_file:
            -  .env
        environment:
            ACME_EMAIL: ${AMCE_EMAIL}
            TRAEFIK_BASIC_AUTH: ${TRAEFIK_BASIC_AUTH}
            IP_WHITELIST: ${IP_WHITELIST}
            TRAEFIK_BASE_HOST: ${TRAEFIK_BASE_HOST}



#    dns:
#        build: ./dnsmasq
#        restart: unless-stopped
#        network_mode: host
#        cap_add:
#            - NET_ADMIN



volumes:
    portainer-data:
